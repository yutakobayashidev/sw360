/*
 * Copyright Siemens AG, 2021. Part of the SW360 Portal Project.
 *
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 */
package org.eclipse.sw360.clients.rest.resource.vulnerabilities;

import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;

@JsonInclude(JsonInclude.Include.NON_NULL)
public class SW360ReleaseVulnerabilityRelation {
    public String id;
    public String releaseId;
    public String vulnerabilityId;
    public List<SW360VerificationStateInfo> verificationStateInfo;
    public String matchedBy;
    public String usedNeedle;

    public String getId() {
        return id;
    }

    public SW360ReleaseVulnerabilityRelation setId(String id) {
        this.id = id;
        return this;
    }

    public String getReleaseId() {
        return releaseId;
    }

    public SW360ReleaseVulnerabilityRelation setReleaseId(String releaseId) {
        this.releaseId = releaseId;
        return this;
    }

    public String getVulnerabilityId() {
        return vulnerabilityId;
    }

    public SW360ReleaseVulnerabilityRelation setVulnerabilityId(String vulnerabilityId) {
        this.vulnerabilityId = vulnerabilityId;
        return this;
    }

    public List<SW360VerificationStateInfo> getVerificationStateInfo() {
        return verificationStateInfo;
    }

    public SW360ReleaseVulnerabilityRelation setVerificationStateInfo(
            List<SW360VerificationStateInfo> verificationStateInfo) {
        this.verificationStateInfo = verificationStateInfo;
        return this;
    }

    public String getMatchedBy() {
        return matchedBy;
    }

    public SW360ReleaseVulnerabilityRelation setMatchedBy(String matchedBy) {
        this.matchedBy = matchedBy;
        return this;
    }

    public String getUsedNeedle() {
        return usedNeedle;
    }

    public SW360ReleaseVulnerabilityRelation setUsedNeedle(String usedNeedle) {
        this.usedNeedle = usedNeedle;
        return this;
    }

    @Override
    public int hashCode() {
        return Objects.hash(super.hashCode(), matchedBy, releaseId, usedNeedle, verificationStateInfo, vulnerabilityId);
    }

    @Override
    public boolean equals(Object obj) {
        SW360ReleaseVulnerabilityRelation sw360ReleaseVulnerabilityRelation = null;
        if (this == obj)
            return true;
        if ((obj instanceof SW360ReleaseVulnerabilityRelation) || super.equals(obj)) {
            sw360ReleaseVulnerabilityRelation = (SW360ReleaseVulnerabilityRelation) obj;
        } else {
            return false;
        }

        return Objects.equals(matchedBy, sw360ReleaseVulnerabilityRelation.getMatchedBy())
                && Objects.equals(releaseId, sw360ReleaseVulnerabilityRelation.getReleaseId())
                && Objects.equals(usedNeedle, sw360ReleaseVulnerabilityRelation.getUsedNeedle())
                && Objects.equals(verificationStateInfo, sw360ReleaseVulnerabilityRelation.getVerificationStateInfo())
                && Objects.equals(vulnerabilityId, sw360ReleaseVulnerabilityRelation.getVulnerabilityId());
    }

    @Override
    public String toString() {
        return "SW360ReleaseVulnerabilityRelation [id=" + id + ", releaseId=" + releaseId + ", vulnerabilityId="
                + vulnerabilityId + ", verificationStateInfo=" + verificationStateInfo + ", matchedBy=" + matchedBy
                + ", usedNeedle=" + usedNeedle + "]";
    }
}
