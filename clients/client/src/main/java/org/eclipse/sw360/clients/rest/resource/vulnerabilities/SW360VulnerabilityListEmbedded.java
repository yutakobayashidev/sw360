/*
 * Copyright Siemens AG, 2021. Part of the SW360 Portal Project.
 *
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 */
package org.eclipse.sw360.clients.rest.resource.vulnerabilities;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import org.eclipse.sw360.clients.rest.resource.Embedded;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@JsonDeserialize(as = SW360VulnerabilityListEmbedded.class)
public final class SW360VulnerabilityListEmbedded implements Embedded {
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @JsonProperty("sw360:vulnerabilityApiDTOes")
    private List<SW360Vulnerability> vulnerabilities = new ArrayList<>();

    public List<SW360Vulnerability> getVulnerabilities() {
        return this.vulnerabilities;
    }

    public SW360VulnerabilityListEmbedded setVulnerabilities(List<SW360Vulnerability> vulnerabilities) {
        this.vulnerabilities = vulnerabilities;
        return this;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        SW360VulnerabilityListEmbedded that = (SW360VulnerabilityListEmbedded) o;
        return Objects.equals(vulnerabilities, that.vulnerabilities);
    }

    @Override
    public int hashCode() {
        return Objects.hash(vulnerabilities);
    }
}