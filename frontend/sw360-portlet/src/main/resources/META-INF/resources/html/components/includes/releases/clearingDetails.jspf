<%--
  ~ Copyright Siemens AG, 2013-2017, 2019. Part of the SW360 Portal Project.
  ~
  ~ This program and the accompanying materials are made
  ~ available under the terms of the Eclipse Public License 2.0
  ~ which is available at https://www.eclipse.org/legal/epl-2.0/
  ~
  ~ SPDX-License-Identifier: EPL-2.0
--%>
<%@ page import="org.eclipse.sw360.portal.common.FossologyConnectionHelper" %>

<portlet:resourceURL var="loadSpdxLicenseInfoUrl">
    <portlet:param name="<%=PortalConstants.ACTION%>" value='<%=PortalConstants.LOAD_SPDX_LICENSE_INFO%>'/>
</portlet:resourceURL>
<portlet:resourceURL var="writeSpdxLicenseInfoIntoReleaseUrl">
    <portlet:param name="<%=PortalConstants.ACTION%>" value='<%=PortalConstants.WRITE_SPDX_LICENSE_INFO_INTO_RELEASE%>'/>
</portlet:resourceURL>

<%@include file="/html/utils/includes/fossologyClearing.jspf"%>

<core_rt:set var="clearingInfo" value="${release.clearingInformation}"/>
<core_rt:set var="FOSSOLOGY_CONNECTION_ENABLED" value="<%=FossologyConnectionHelper.getInstance().isFossologyConnectionEnabled()%>"/>

<table class="table table-bordered" id="spdxAttachments"
        data-load-spdx-license-info-url="<%=loadSpdxLicenseInfoUrl%>"
        data-write-spdx-license-info-into-release-url="<%=writeSpdxLicenseInfoIntoReleaseUrl%>"
        data-release-id-parameter-name="<%=PortalConstants.RELEASE_ID%>"
        data-attachment-id-parameter-name="<%=PortalConstants.ATTACHMENT_ID%>"
        data-attachment-name-parameter-name="<%=PortalConstants.ATTACHMENT_NAME%>"
        data-spdx-license-info-parameter-name="<%=PortalConstants.SPDX_LICENSE_INFO%>">
    <colgroup>
        <col style="width: 40%;"/>
        <col style="width: 20%;"/>
        <col style="width: 40%;"/>
    </colgroup>
    <thead>
        <tr>
            <th><liferay-ui:message key="spdx.attachments" /></th>
            <th><liferay-ui:message key="action" /></th>
            <th><liferay-ui:message key="result" /></th>
        </tr>
    </thead>

    <tbody>
        <core_rt:forEach items="${spdxAttachments}" var="spdxAttachment">
            <tr id="${spdxAttachment.attachmentContentId}">
                <td>
                    <sw360:out value="${spdxAttachment.filename}"/>
                </td>
                <td data-attachment-id="${spdxAttachment.attachmentContentId}">
                    <button class="btn btn-secondary showSpdxContentBtn" data-attachment-name="${spdxAttachment.filename}"
                    data-release-id="${release.id}" data-attachment-id="${spdxAttachment.attachmentContentId}"><liferay-ui:message key="show.license.info" /></button>
                </td>
                <td class="result">
                </td>
            </tr>
        </core_rt:forEach>
    </tbody>
</table>

<table class="table label-value-table" id="ReleaseClearingOverview">
    <thead>
    <tr>
        <th colspan="2"><liferay-ui:message key="clearing.details" />: <sw360:ReleaseName release="${release}" /></th>
    </tr>
    </thead>
    <tr>
        <td><liferay-ui:message key="clearing.state" />:</td>
        <td class="actions">
            <div class="actions justify-content-start">
                <sw360:DisplayEnum value="${release.clearingState}"/>
                <core_rt:if test="${inReleaseDetailsContext}">
                    <core_rt:choose>
                        <core_rt:when test="${not empty FOSSOLOGY_CONNECTION_ENABLED and not FOSSOLOGY_CONNECTION_ENABLED}">
                            <span class="ml-2">
                                <svg class="lexicon-icon disabled"><title><liferay-ui:message key="fossology.is.not.configured" /></title><use href='<%=request.getContextPath()%>/images/icons.svg#fossology' /></svg>
                            </span>
                        </core_rt:when>
                        <core_rt:otherwise>
                            <span id="releaseAction${release.id}" class="ml-2">
                                <svg class="lexicon-icon action fossology" data-release-id="${release.id}">
                                    <title><liferay-ui:message key="fossology.process" /></title>
                                    <use href='<%=request.getContextPath()%>/images/icons.svg#fossology' />
                                </svg>
                            </span>
                        </core_rt:otherwise>
                    </core_rt:choose>
                </core_rt:if>
            </div>
        </td>
    </tr>
    <tr>
        <td><liferay-ui:message key="binaries.original.from.community" />:</td>
        <td><sw360:DisplayBoolean defined="${clearingInfo.setBinariesOriginalFromCommunity}"
                                  value="${clearingInfo.binariesOriginalFromCommunity}"/></td>
    </tr>
    <tr>
        <td><liferay-ui:message key="binaries.self.made" />:</td>
        <td><sw360:DisplayBoolean defined="${clearingInfo.setBinariesSelfMade}"
                                  value="${clearingInfo.binariesSelfMade}"/></td>
    </tr>
    <tr>
        <td><liferay-ui:message key="component.license.information" />:</td>
        <td><sw360:DisplayBoolean defined="${clearingInfo.setComponentLicenseInformation}"
                                  value="${clearingInfo.componentLicenseInformation}"/></td>
    </tr>
    <tr>
        <td><liferay-ui:message key="source.code.delivery" />:</td>
        <td><sw360:DisplayBoolean defined="${clearingInfo.setSourceCodeDelivery}"
                                  value="${clearingInfo.sourceCodeDelivery}"/></td>
    </tr>
    <tr>
        <td><liferay-ui:message key="source.code.original.from.community" />:</td>
        <td><sw360:DisplayBoolean defined="${clearingInfo.setSourceCodeOriginalFromCommunity}"
                                  value="${clearingInfo.sourceCodeOriginalFromCommunity}"/></td>
    </tr>
    <tr>
        <td><liferay-ui:message key="source.code.tool.made" />:</td>
        <td><sw360:DisplayBoolean defined="${clearingInfo.setSourceCodeToolMade}"
                                  value="${clearingInfo.sourceCodeToolMade}"/></td>
    </tr>
    <tr>
        <td><liferay-ui:message key="source.code.self.made" />:</td>
        <td><sw360:DisplayBoolean defined="${clearingInfo.setSourceCodeSelfMade}"
                                  value="${clearingInfo.sourceCodeSelfMade}"/></td>
    </tr>
    <tr>
        <td><liferay-ui:message key="screenshot.of.website" />:</td>
        <td><sw360:DisplayBoolean defined="${clearingInfo.setScreenshotOfWebSite}"
                                  value="${clearingInfo.screenshotOfWebSite}"/></td>
    </tr>
    <tr>
        <td><liferay-ui:message key="finalized.license.scan.report" />:</td>
        <td><sw360:DisplayBoolean defined="${clearingInfo.setFinalizedLicenseScanReport}"
                                  value="${clearingInfo.finalizedLicenseScanReport}"/></td>
    </tr>
    <tr>
        <td><liferay-ui:message key="license.scan.report.result" />:</td>
        <td><sw360:DisplayBoolean defined="${clearingInfo.setLicenseScanReportResult}"
                                  value="${clearingInfo.licenseScanReportResult}"/></td>
    </tr>
    <tr>
        <td><liferay-ui:message key="legal.evaluation" />:</td>
        <td><sw360:DisplayBoolean defined="${clearingInfo.setLegalEvaluation}"
                                  value="${clearingInfo.legalEvaluation}"/></td>
    </tr>
    <tr>
        <td><liferay-ui:message key="license.agreement" />:</td>
        <td><sw360:DisplayBoolean defined="${clearingInfo.setLicenseAgreement}"
                                  value="${clearingInfo.licenseAgreement}"/></td>
    </tr>
    <tr>
        <td><liferay-ui:message key="scanned" />:</td>
        <td><sw360:out value="${clearingInfo.scanned}"/></td>
    </tr>
    <tr>
        <td><liferay-ui:message key="component.clearing.report" />
        </td>
        <td><sw360:DisplayBoolean defined="${clearingInfo.setComponentClearingReport}"
                                  value="${clearingInfo.componentClearingReport}"/></td>
    </tr>
    <tr>
        <td><liferay-ui:message key="clearing.standard" />:</td>
        <td><sw360:out value="${clearingInfo.clearingStandard}"/></td>
    </tr>
    <tr>
        <td><liferay-ui:message key="external.url" />:</td>
        <td><sw360:DisplayLink target="${clearingInfo.externalUrl}"/></td>
    </tr>
    <tr>
        <td><liferay-ui:message key="comments" />:</td>
        <td><sw360:out value="${clearingInfo.comment}"/></td>
    </tr>
</table>

<table class="table label-value-table" id="RequestInfo">
    <thead>
    <tr>
        <th colspan="2"><liferay-ui:message key="request.information" /></th>
    </tr>
    </thead>

    <tr>
        <td><liferay-ui:message key="request.id" />:</td>
        <td><sw360:out value="${clearingInfo.requestID}"/></td>
    </tr>
    <tr>
        <td><liferay-ui:message key="additional.request.information" />:</td>
        <td><sw360:out value="${clearingInfo.additionalRequestInfo}"/></td>
    </tr>
    <tr>
        <td><liferay-ui:message key="evaluation.start" />:</td>
        <td><sw360:out value="${clearingInfo.procStart}"/></td>
    </tr>
    <tr>
        <td><liferay-ui:message key="evaluation.end" /></td>
        <td><sw360:out value="${clearingInfo.evaluated}"/></td>
    </tr>
</table>

<table class="table label-value-table" id="ReleaseSupplementalInfo">
    <thead>
    <tr>
        <th colspan="2"><liferay-ui:message key="supplemental.information" /></th>
    </tr>
    </thead>
    <tr>
        <td><liferay-ui:message key="external.supplier.id" />:</td>
        <td><sw360:out value="${clearingInfo.externalSupplierID}"/></td>
    </tr>
    <tr>
        <td><liferay-ui:message key="number.of.security.vulnerabilities" />:</td>
        <td><sw360:out value="${clearingInfo.countOfSecurityVn}"/></td>
    </tr>
</table>


<%--for javascript library loading --%>
<%@ include file="/html/utils/includes/requirejs.jspf" %>
<script type="text/javascript">
    require(['jquery', 'modules/button', 'utils/includes/fossologyClearing'], function ($, button, fossology) {

        fossology.initialize();

        $('#ReleaseClearingOverview').on('click', '.action.fossology', function(event) {
            var data = $(event.currentTarget).data();
            fossology.openFossologyDialog(data.releaseId);
        });

        $('.showSpdxContentBtn').on('click', function(event) {
            handleShowSpdxContentClick($(event.currentTarget));
        });

        function handleShowSpdxContentClick($btn) {
            var tableData = $('#spdxAttachments').data(),
                rawUrl = tableData.loadSpdxLicenseInfoUrl,
                url = Liferay.PortletURL.createURL(rawUrl),
                btnData = $btn.data(),
                releaseId = btnData.releaseId,
                attachmentId = btnData.attachmentId,
                $row = $('#' + attachmentId),
                $btnCell = $row.find('td[data-attachment-id=' + attachmentId + ']'),
                $resultCell = $btnCell.parent().find('.result');

            url.setParameter(tableData.releaseIdParameterName, releaseId);
            url.setParameter(tableData.attachmentIdParameterName, attachmentId);
            url.setParameter(tableData.attachmentNameParameterName, btnData.attachmentName);

            button.wait($btnCell.find('button'));

            $.ajax({
                type: 'GET',
                dataType: 'json',
                url: url.toString(),
            }).done(function(result) {
                if (!result || result.length == 0 || Object.getOwnPropertyNames(result).length == 0) {
                    replaceContentWithWarning($resultCell, 'No license information found in file.');
                } else {
                    printResult($row, result);
                    addTakeOverBtn($btnCell, releaseId, attachmentId, result);
                }
            }).fail(function(error) {
                replaceContentWithError($resultCell, '<liferay-ui:message key="cannot.load.license.information" />: '+ error.statusText + ' (' + error.status + ').');
            }).always(function() {
                button.finish($btnCell.find('button'));
            });
        }

        function printResult($row, data) {
            var $list = $('<ul></ul>'),
                $otherList = $('<ul></ul>'),
                $cell = $row.find('.result');

            $cell.html('');
            $cell.append($('<div>', { text: data.license}));
            $cell.append($list);

            if (data.licenseIds) {
                data.licenseIds.forEach(function(id) {
                    $list.append($('<li>', { text: id }));
                });
            }

            $cell.append($('<div>', { text: data.otherLicense}));
            $cell.append($otherList);

            if (data.otherLicenseIds) {
                data.otherLicenseIds.forEach(function(id) {
                    $otherList.append($('<li>', { text: id }));
                });
            }
        }

        function addTakeOverBtn($parent, releaseId, attachmentId, data) {
            var $newBtn = $('<button>', { 'class': 'btn btn-primary spdxTakeOverBtn', 'data-release-id': releaseId, 'data-attachment-id': attachmentId, text: '<liferay-ui:message key="add.data.to.this.release" />' });

            $newBtn.data('result', data);
            $parent.html('');
            $parent.append($newBtn);

            $newBtn.on('click', function(event) {
                handleTakeOverClick($(event.currentTarget));
            });
        }

        function handleTakeOverClick($btn) {
            var tableData = $('#spdxAttachments').data(),
                rawUrl = tableData.writeSpdxLicenseInfoIntoReleaseUrl,
                url = Liferay.PortletURL.createURL(rawUrl),
                btnData = $btn.data(),
                releaseId = btnData.releaseId,
                attachmentId = btnData.attachmentId,
                data = btnData.result,
                $row = $('#' + attachmentId),
                $btnCell = $row.find('td[data-attachment-id=' + attachmentId + ']'),
                $resultCell = $btnCell.parent().find('.result'),
                dataObj = {};

            url.setParameter(tableData.releaseIdParameterName, releaseId);
            url.setParameter(tableData.attachmentIdParameterName, attachmentId);
            dataObj[ '<portlet:namespace/>' + tableData.spdxLicenseInfoParameterName ] = JSON.stringify(data);

            button.wait($btnCell.find('button'));

            $.ajax({
                type: 'POST',
                dataType: 'json',
                url: url.toString(),
                data: dataObj
            }).done(function(result) {
                if (!result || result.length == 0 || result.result !== 'SUCCESS') {
                    replaceContentWithError($resultCell, '<liferay-ui:message key="could.not.write.spdx.data.into.release" />: ' + result.result);
                } else {
                    replaceContentWithSuccess($resultCell, '<liferay-ui:message key="success.please.reload.page.to.see.the.changes" />');
                }
            }).fail(function(error) {
                replaceContentWithError($resultCell, '<liferay-ui:message key="could.not.write.spdx.data.into.release" />'+ error.statusText + ' (' + error.status + ').');
            }).always(function() {
                button.finish($btnCell.find('button'));
            });
        }

        function replaceContentWithSuccess($parent, message) {
            replaceContentWith($parent, null, 'alert alert-success mb-0', message);
        }
        function replaceContentWithWarning($parent, message) {
            replaceContentWith($parent, null, 'alert alert-warning mb-0', message);
        }
        function replaceContentWithError($parent, message) {
            replaceContentWith($parent, null, 'alert alert-danger mb-0', message);
        }
        function replaceContentWith($parent, parentStyleClass, styleClass, message) {
            $parent.html('');
            $parent.attr('class', parentStyleClass ? parentStyleClass : '');
            $parent.append($('<div>', { 'class': styleClass ? styleClass : '' })
                    .append($('<span>', { 'text': message })));
        }
    });

</script>
